/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import datos.Contactos;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Laura Daniela
 */
public class Agenda_interfaz extends javax.swing.JFrame {
    ArrayList Agenda = new ArrayList();
    /**
     * Creates new form Agenda_interfaz
     */
    public Agenda_interfaz() {
        initComponents();
        CrearModelo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputNumero = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        inputNombres = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        inputApellidos = new javax.swing.JTextField();
        guardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        exportar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        mostrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 24)); // NOI18N
        jLabel1.setText("Agenda de contactos <3");

        jLabel2.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        jLabel2.setText("NÃºmero");

        inputNumero.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        inputNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNumeroActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        jLabel3.setText("Nombres");

        inputNombres.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        jLabel4.setText("Apellidos");

        inputApellidos.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 12)); // NOI18N
        inputApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputApellidosActionPerformed(evt);
            }
        });

        guardar.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        exportar.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        exportar.setText("Exportar");
        exportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportarActionPerformed(evt);
            }
        });

        borrar.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        borrar.setText("Borrar");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        editar.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        editar.setText("Editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        mostrar.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        mostrar.setText("Mostrar");
        mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(inputNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(inputNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(inputApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(guardar)
                                .addGap(7, 7, 7)
                                .addComponent(editar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(exportar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(inputNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(inputNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(inputApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guardar)
                            .addComponent(editar)
                            .addComponent(borrar)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exportar)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNumeroActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        String  num = inputNumero.getText();
        String nom = inputNombres.getText();
        String ape = inputApellidos.getText();
        //poner en logica
        
        if(!num.isEmpty()){
            if (!nom.isEmpty()){
                if (!ape.isEmpty()){
                    
                    datos.Contactos contacto = new datos.Contactos(Integer.parseInt(num), nom, ape);
                    Agenda.add(contacto);
                    
                    JOptionPane.showMessageDialog(null, "Contacto guardado :D");
                    inputNumero.setText("");
                    inputNombres.setText("");
                    inputApellidos.setText("");
                    
                }else{
                    JOptionPane.showMessageDialog(null, "El campo Apellidos esta vacÃ­o");
                }
            }else{
                JOptionPane.showMessageDialog(null, "El campo Nombres esta vacÃ­o");
            }
        }else{
            JOptionPane.showMessageDialog(null, "El campo Numero esta vacÃ­o");
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void inputApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputApellidosActionPerformed

    private void exportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportarActionPerformed
    
        FileWriter fw = null;
        try {
            String ruta = "//datos//txt.txt";
            File f = new File(ruta);
            fw = new FileWriter(f);
            BufferedWriter escritura = new BufferedWriter(fw);
            for(int i=0;i<Agenda.size();i++){
                try {
                    escritura.write((String) Agenda.get(i));
                } catch (IOException ex) {
                    Logger.getLogger(Agenda_interfaz.class.getName()).log(Level.SEVERE, null, ex);
                }
                escritura.newLine();
                
            }       escritura.close();
        } catch (IOException ex) {
            Logger.getLogger(Agenda_interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(Agenda_interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_exportarActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        String  num = inputNumero.getText();
        String nom = inputNombres.getText();
        String ape = inputApellidos.getText();
        Object objeto[] = null;
        //poner en logica
        if(!num.isEmpty()){
            if (!nom.isEmpty()){
                if (!ape.isEmpty()){
                    Contactos contacto = new datos.Contactos(Integer.parseInt(num), nom, ape) ;
                    for (int i = 0; i < Agenda.size(); i++){
                        Contactos agend = (Contactos) Agenda.get(i);
                        String agendnom = agend.getNombres();
                        int agendnum = agend.getNumero();
                        String agendape = agend.getApellidos();
                        String contname = contacto.getNombres();
                        int contnum = contacto.getNumero();
                        String contape = contacto.getApellidos();
                        if(agendnom.equals(contname)){
                            if(agendnum==contnum){
                                if(agendape.equals(contape)){
                                    Agenda.remove(i);
                                    CrearModelo();
                                }
                            }
                        }
                    }
                    
                    JOptionPane.showMessageDialog(null, "Contacto borrado :D");
                    inputNumero.setText("");
                    inputNombres.setText("");
                    inputApellidos.setText("");
                    
                }else{
                    JOptionPane.showMessageDialog(null, "El campo Apellidos esta vacÃ­o");
                }
            }else{
                JOptionPane.showMessageDialog(null, "El campo Nombres esta vacÃ­o");
            }
        }else{
            JOptionPane.showMessageDialog(null, "El campo Numero esta vacÃ­o");
        }
   
        
    }//GEN-LAST:event_borrarActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        String  num = inputNumero.getText();
        String nom = inputNombres.getText();
        String ape = inputApellidos.getText();
        Object objeto[] = null;
        //poner en logica
        if(!num.isEmpty()){
            if (!nom.isEmpty()){
                if (!ape.isEmpty()){
                    Contactos contacto = new datos.Contactos(Integer.parseInt(num), nom, ape) ;
                    for (int i = 0; i < Agenda.size(); i++){
                        Contactos agend = (Contactos) Agenda.get(i);
                        String agendnom = agend.getNombres();
                        int agendnum = agend.getNumero();
                        String agendape = agend.getApellidos();
                        String contname = contacto.getNombres();
                        int contnum = contacto.getNumero();
                        String contape = contacto.getApellidos();
                        if(agendnom.equals(contname)){
                            String nname = JOptionPane.showInputDialog("Introduce el nuevo nombre, si no es o que deseas cambiar, introduce el nombre original.");
                            if(agendnum==contnum){
                                String nnum = JOptionPane.showInputDialog("Introduce el nuevo numero, si no es o que deseas cambiar, introduce el numero original.");
                                if(agendape.equals(contape)){
                                    String nape = JOptionPane.showInputDialog("Introduce el nuevo apellido, si no es o que deseas cambiar, introduce el apellido original.");
                                    Contactos newcontacto = new datos.Contactos(Integer.parseInt(nnum), nname, nape) ;
                                    Agenda.remove(i);
                                    Agenda.add(newcontacto);
                                    CrearModelo();
                                }
                            }
                        }
                    }
                    
                    JOptionPane.showMessageDialog(null, "Contacto editado :D");
                    inputNumero.setText("");
                    inputNombres.setText("");
                    inputApellidos.setText("");
                    
                }else{
                    JOptionPane.showMessageDialog(null, "El campo Apellidos esta vacÃ­o");
                }
            }else{
                JOptionPane.showMessageDialog(null, "El campo Nombres esta vacÃ­o");
            }
        }else{
            JOptionPane.showMessageDialog(null, "El campo Numero esta vacÃ­o");
        }
    }//GEN-LAST:event_editarActionPerformed

    private void mostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarActionPerformed
         Object objeto[] = null;
        for (int i = 0; i < Agenda.size(); i++){
            Contactos contacto = (Contactos) Agenda.get(i);
            
            modelo.addRow(objeto);
            modelo.setValueAt(contacto.getNumero(), i, 0);
            modelo.setValueAt(contacto.getNombres(), i, 1);
            modelo.setValueAt(contacto.getApellidos(), i, 2);
        }
    }//GEN-LAST:event_mostrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agenda_interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agenda_interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agenda_interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agenda_interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Agenda_interfaz().setVisible(true);
            }
        });
    }
    
    DefaultTableModel modelo;
    
    private void CrearModelo(){
        try{
            modelo = (new DefaultTableModel (
            null, new String []{
                "Numero", "Nombres", "Apellidos"}){});
            jTable1.setModel(modelo);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error");
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton borrar;
    private javax.swing.JButton editar;
    private javax.swing.JButton exportar;
    private javax.swing.JButton guardar;
    private javax.swing.JTextField inputApellidos;
    private javax.swing.JTextField inputNombres;
    private javax.swing.JTextField inputNumero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton mostrar;
    // End of variables declaration//GEN-END:variables
}
